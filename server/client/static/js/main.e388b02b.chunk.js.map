{"version":3,"sources":["logo.svg","main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainComponent","props","useState","prod","setprod","total","settotal","quantity","setquantity","mopen","setmopen","useEffect","localStorage","getItem","maindata","setItem","JSON","stringify","parse","Container","isopen","close","reload","removeItem","Row","className","Col","xs","map","dta","index","Breadcrumb","id","item","role","onClick","e","preventDefault","idx","split","pr","details","price","addQuantity","target","minusQuantity","cur_qua","totalprice","indexOf","splice","toast","x","document","getElementById","parentNode","removeChild","removeProduct","Card","CardHeader","CardBody","CardFooter","MyModal","Modal","isOpen","ModalHeader","toggle","ModalBody","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e388b02b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './main.css';\nimport {\n    Container, Row, Col, Card, CardHeader, CardFooter, CardBody,\n    Breadcrumb,Modal, ModalHeader, ModalBody, Button\n} from 'reactstrap';\nimport { toast } from 'react-toastify';\nexport const MainComponent = (props) => {\n    const [prod, setprod] = useState([])\n    const [total, settotal] = useState(130)\n    const [quantity, setquantity] = useState(4)\n    const [mopen, setmopen] = useState(false)\n    useEffect(() => {\n        if (localStorage.getItem(\"checkoutdta\") == null) {\n            const maindata = [\n                {\n                    \"item\": \"pr-01\",\n                    \"quantity\": 1,\n                    \"price\": 25\n                },\n                {\n                    \"item\": \"pr-02\",\n                    \"quantity\": 1,\n                    \"price\": 30\n                },\n                {\n                    \"item\": \"pr-03\",\n                    \"quantity\": 1,\n                    \"price\": 35\n                },\n                {\n                    \"item\": \"pr-04\",\n                    \"quantity\": 1,\n                    \"price\": 40\n                }\n            ]\n            localStorage.setItem(\"checkoutdta\", JSON.stringify(maindata));\n            setprod(maindata);\n        } else {\n            if (JSON.stringify(prod) != localStorage.getItem(\"checkoutdta\")) {\n                setprod(JSON.parse(localStorage.getItem(\"checkoutdta\")));\n            }\n            // else if{\n\n            // }\n        }\n    }, [prod]);\n    useEffect(() => {\n        if (quantity == 0) {\n            setmopen(true)\n        }\n    }, [quantity])\n    const calprice = function (cp) {\n        settotal()\n    }\n    const addQuantity = function (id) {\n        const idx = id.split(\"a-\")[1];\n        var pr = prod;\n        var details = pr[idx];\n        details.quantity = details.quantity + 1;\n        pr[idx] = details;\n        setprod(pr);\n        setquantity(quantity + 1)\n        settotal(total + details.price)\n    }\n    const minusQuantity = function (id) {\n        const idx = id.split(\"m-\")[1];\n        var pr = prod;\n        var details = pr[idx];\n        details.quantity = details.quantity - 1;\n        pr[idx] = details;\n        setprod(pr);\n        setquantity(quantity - 1);\n        settotal(total - details.price);\n    }\n    const removeProduct = function (id) {\n        const idx = id.split(\"r-\")[1];\n        var pr = prod;\n        var details = pr[idx];\n        var cur_qua = details.quantity;\n        var totalprice = cur_qua * details.price;\n        details.quantity = 0;\n        const index = prod.indexOf(idx);\n        if (index > -1) {\n            pr.splice(index, 1);\n        }\n        //pr[idx] = details;\n        setprod(pr);\n        settotal(total - totalprice);\n        setquantity(quantity - cur_qua);\n        toast(\"Item Removed From Cart\")\n        var x = document.getElementById(`item-${idx}`);\n        x.parentNode.removeChild(x);\n    }\n    const closemodal = ()=>{\n        setmopen(false);\n    }\n    const reloaddata = ()=>{\n        setmopen(false);\n        localStorage.removeItem(\"checkoutdta\");\n        setprod([]);\n        settotal(130);\n        setquantity(4);\n    }\n    return (\n        <Container>\n            <MyModal isopen={mopen} close={closemodal} reload={reloaddata}></MyModal>\n            <Row className=\"page-main\">\n                <Col xs=\"8\" className=\"product-left\">\n                    {prod.map(\n                        (dta, index) => {\n                            return (\n                                <Breadcrumb>\n                                    <Row className=\"item-row\" id={`item-${index}`}>\n                                        <Col xs=\"3\">{dta.item}</Col>\n                                        <Col xs=\"3\">\n                                            <i role=\"button\" id={`a-${index}`}\n                                                onClick={e => {\n                                                    e.preventDefault()\n                                                    addQuantity(e.target.id);\n                                                }}\n                                            >+</i>{dta.quantity}\n                                            <i role=\"button\" id={`m-${index}`}\n                                                onClick={e => {\n                                                    e.preventDefault()\n                                                    minusQuantity(e.target.id);\n                                                }}\n                                            >-</i></Col>\n                                        <Col xs=\"3\" id={`p-${index}`}>{dta.price}</Col>\n                                        <Col xs=\"3\"><i role=\"button\" id={`r-${index}`}\n                                            onClick={e => {\n                                                e.preventDefault()\n                                                removeProduct(e.target.id);\n                                            }}\n                                        >X</i></Col>\n                                    </Row>\n                                </Breadcrumb>\n                            )\n                        }\n                    )\n                    }\n                </Col>\n                <Col xs=\"4\" className=\"product-right\">\n                    <Card>\n                        <CardHeader>Total</CardHeader>\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"5\">{`Items (${quantity})`}</Col>\n                                <Col xs=\"7\">{total}</Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"5\">Discount</Col>\n                                <Col xs=\"7\">10%</Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"5\">TypeDiscount</Col>\n                                <Col xs=\"7\">20%</Col>\n                            </Row>\n                        </CardBody>\n                        <CardFooter>\n                            <Row>\n                                <Col xs=\"4\">Total</Col>\n                                <Col xs=\"8\">{total == 0 ? 0 : total + 3}</Col>\n                            </Row>\n                        </CardFooter>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n\n}\n\nconst MyModal = (props) => {\n    return (\n        <Modal isOpen={props.isopen}>\n            <ModalHeader toggle={props.close}>Alert</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <h2>Reload deafult cart</h2>\n                </Row>\n                <Row>\n                    <Button className=\"okbtn\" onClick={e=>{\n                        props.reload()\n                    }}>yes</Button>\n                    <Button onClick={e=>{\n                        props.close()\n                    }}>no</Button>\n                </Row>\n                    \n            </ModalBody>\n        </Modal>\n    )\n}","import React from 'react';\nimport logo from './logo.svg';\nimport {MainComponent} from './main/index'\nimport { ToastContainer} from 'react-toastify';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent/>\n      <ToastContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}